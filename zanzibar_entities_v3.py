# Autogenerated Zanzibar v3 Entity Dataclasses
# Do not modify directly unless updating schema

from dataclasses import dataclass
from typing import Optional, Literal
from datetime import datetime, time

@dataclass
class Session:
    name: Literal["Asia", "London", "NY"]
    start_ts: time
    end_ts: time
    timezone: str = "Europe/London"

@dataclass
class Zone:
    tf: Literal["D1", "H4", "H1", "M15", "M5", "M1"]
    kind: Literal["Supply", "Demand", "Breaker", "OB", "FVG", "Imbalance"]
    price_low: float
    price_high: float
    status: Literal["unmitigated", "mitigated", "invalidated"]
    tapped: bool = False

@dataclass
class LiquidityEvent:
    side: Literal["buy-side", "sell-side"]
    style: Literal["equal_highs_sweep", "equal_lows_sweep", "trendline_sweep", "inducement", "resting_pool"]
    session_origin: Literal["Asia", "London", "NY", "PreviousDay", "PreviousWeek"]

@dataclass
class Trigger:
    tf: str
    pattern: Literal["CHoCH", "BOS"]
    direction: Literal["up", "down"]
    optional: bool = False

@dataclass
class RiskRule:
    max_daily_risk_pct: float = 1.0
    per_trade_risk_pct: float = 0.25
    rr_min: float = 3.0

@dataclass
class Trade:
    pair: str
    direction: Literal["long", "short"]
    entry_ts: datetime
    entry_price: float
    sl: float
    tp: float
    rr_planned: float
    rr_real: Optional[float]
    status: Literal["open", "closed_sl", "closed_tp", "closed_manual", "closed_be"]
